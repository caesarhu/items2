<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="d9cab758-e69a-4c31-94ca-b9ee00df7d84" name="Default Changelist" comment="" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="DepsProjectDetails">
    <option name="cachedModuleDetails">
      <map>
        <entry key="$PROJECT_DIR$/deps.edn">
          <value>
            <ModuleDetails>
              <option name="details" value="{:paths [&quot;src&quot; &quot;resources&quot;], :deps {org.clojure/clojure {:mvn/version &quot;1.10.1&quot;}, com.draines/postal {:mvn/version &quot;2.0.4&quot;}, juxt/clip {:mvn/version &quot;0.21.0&quot;}, caesarhu/aave {:git/url &quot;https://github.com/caesarhu/aave.git&quot;, :sha &quot;7c594ea03bcbd3b9653f5b8c382990ed062c1338&quot;}, exoscale/ex {:mvn/version &quot;0.3.16&quot;}, functionalbytes/redelay {:mvn/version &quot;1.1.0&quot;}, org.postgresql/postgresql {:mvn/version &quot;42.2.18&quot;}, org.clojure/tools.namespace {:mvn/version &quot;1.1.0&quot;}, aero/aero {:mvn/version &quot;1.1.6&quot;}, migratus/migratus {:mvn/version &quot;1.3.3&quot;}, seancorfield/next.jdbc {:mvn/version &quot;1.1.613&quot;}, funcool/datoteka {:mvn/version &quot;1.2.0&quot;}, com.fzakaria/slf4j-timbre {:mvn/version &quot;0.3.20&quot;}, clojure.java-time/clojure.java-time {:mvn/version &quot;0.3.2&quot;}, org.clojure/data.csv {:mvn/version &quot;1.0.0&quot;}, com.taoensso/timbre {:mvn/version &quot;5.1.0&quot;}, metosin/malli {:mvn/version &quot;0.2.1&quot;}, hikari-cp/hikari-cp {:mvn/version &quot;2.13.0&quot;}, clj-bom/clj-bom {:mvn/version &quot;0.1.2&quot;}, cjsauer/disqualified {:mvn/version &quot;0.1.0&quot;}, nrepl/nrepl {:mvn/version &quot;0.8.3&quot;}, com.rpl/specter {:mvn/version &quot;1.1.3&quot;}, org.clojure/test.check {:mvn/version &quot;1.1.0&quot;}, metosin/jsonista {:mvn/version &quot;0.3.0&quot;}, borkdude/sci {:mvn/version &quot;0.2.0&quot;}, caesarhu/hodur-translate {:git/url &quot;https://github.com/caesarhu/hodur-translate&quot;, :sha &quot;1c60441555c40969d97648f7e9dbeff7604c0eee&quot;}, medley/medley {:mvn/version &quot;1.3.0&quot;}}, :aliases {:1.4 {:override-deps {org.clojure/clojure {:mvn/version &quot;1.4.0&quot;}}}, :install {:extra-deps {slipset/deps-deploy {:mvn/version &quot;RELEASE&quot;}}, :main-opts [&quot;-m&quot; &quot;deps-deploy.deps-deploy&quot; &quot;install&quot;]}, :spec2 {:extra-deps {org.clojure/spec-alpha2 {:git/url &quot;https://github.com/clojure/spec-alpha2&quot;, :sha &quot;cd07a40c4ee720614a18429da4b09a6c5d8fe979&quot;}}}, :jar {:extra-deps {seancorfield/depstar {:mvn/version &quot;RELEASE&quot;}}, :exec-fn hf.depstar/jar, :exec-args {}}, :outdated {:extra-deps {antq/antq {:mvn/version &quot;RELEASE&quot;}}, :main-opts [&quot;-m&quot; &quot;antq.core&quot;]}, :portal {:extra-deps {djblue/portal {:mvn/version &quot;RELEASE&quot;}}}, :1.3 {:override-deps {org.clojure/clojure {:mvn/version &quot;1.3.0&quot;}}}, :eastwood {:extra-deps {jonase/eastwood {:mvn/version &quot;RELEASE&quot;}}, :main-opts [&quot;-m&quot; &quot;eastwood.lint&quot; &quot;{:source-paths,[\&quot;src\&quot;],:test-paths,[\&quot;test\&quot;]}&quot;]}, :reveal {:extra-deps {vlaaad/reveal {:mvn/version &quot;RELEASE&quot;}}, :main-opts [&quot;-m&quot; &quot;vlaaad.reveal&quot; &quot;repl&quot;], :jvm-opts [&quot;-Dvlaaad.reveal.prefs={:theme,:light,:font-family,\&quot;Monospaced\&quot;,:font-size,18}&quot;]}, :socket {:jvm-opts [&quot;-Dclojure.server.repl={:address,\&quot;0.0.0.0\&quot;,:port,50505,:accept,clojure.core.server/repl}&quot;]}, :check {:extra-deps {athos/clj-check {:git/url &quot;https://github.com/athos/clj-check&quot;, :sha &quot;cd1f25456de5eebda0a69602dd3445905382b3a4&quot;}}, :main-opts [&quot;-m&quot; &quot;clj-check.check&quot;]}, :expect {:extra-deps {expectations/expectations {:mvn/version &quot;RELEASE&quot;}, expectations/clojure-test {:mvn/version &quot;RELEASE&quot;}}}, :new {:extra-deps {seancorfield/clj-new {:mvn/version &quot;RELEASE&quot;}}, :exec-fn clj-new/create, :exec-args {:template lib}}, :bench {:extra-deps {criterium/criterium {:mvn/version &quot;RELEASE&quot;}}}, :liquid {:extra-deps {mogenslund/liquid {:mvn/version &quot;RELEASE&quot;}}, :main-opts [&quot;-m&quot; &quot;liq.core&quot;]}, :jedi-time {:extra-deps {jedi-time/jedi-time {:mvn/version &quot;0.2.1&quot;}}}, :pne {:main-opts [&quot;-e&quot; &quot;(defmacro,$,[&amp;,body],(list,'while,(list,'when-let,'[$_,(read-line)],(let,[v,(gensym)],(list,'let,(vector,v,(list*,'do,body)),(list,'println,v))),'$_)))&quot;]}, :1.8 {:override-deps {org.clojure/clojure {:mvn/version &quot;1.8.0&quot;}}}, :1.10 {:override-deps {org.clojure/clojure {:mvn/version &quot;1.10.0&quot;}}}, :reveal-nrepl {:extra-deps {vlaaad/reveal {:mvn/version &quot;1.2.182&quot;}, nrepl/nrepl {:mvn/version &quot;0.8.3&quot;}}, :jvm-opts [&quot;-Dvlaaad.reveal.prefs={:theme,:light,:font-family,\&quot;Monospaced\&quot;,:font-size,18}&quot;], :main-opts [&quot;-m&quot; &quot;nrepl.cmdline&quot; &quot;--middleware&quot; &quot;[vlaaad.reveal.nrepl/middleware]&quot; &quot;-i&quot;]}, :1.1 {:override-deps {org.clojure/clojure {:mvn/version &quot;1.1.0&quot;}}}, :rebel {:extra-deps {com.bhauman/rebel-readline {:mvn/version &quot;RELEASE&quot;}}, :main-opts [&quot;-m&quot; &quot;rebel-readline.main&quot;]}, :uberjar {:extra-deps {seancorfield/depstar {:mvn/version &quot;RELEASE&quot;}}, :exec-fn hf.depstar/uberjar, :exec-args {:aot true}}, :measure {:extra-deps {com.clojure-goes-fast/clj-memory-meter {:mvn/version &quot;RELEASE&quot;}}}, :rebl {:extra-deps {org.clojure/data.json {:mvn/version &quot;1.0.0&quot;}, org.openjfx/javafx-swing {:mvn/version &quot;16-ea+5&quot;}, org.openjfx/javafx-controls {:mvn/version &quot;16-ea+5&quot;}, org.yaml/snakeyaml {:mvn/version &quot;1.27&quot;}, com.cognitect/rebl {:mvn/version &quot;0.9.242&quot;}, org.clojure/data.csv {:mvn/version &quot;1.0.0&quot;}, org.openjfx/javafx-base {:mvn/version &quot;16-ea+5&quot;}, org.openjfx/javafx-web {:mvn/version &quot;16-ea+5&quot;}, org.openjfx/javafx-fxml {:mvn/version &quot;16-ea+5&quot;}, org.clojure/core.async {:mvn/version &quot;1.3.610&quot;}}, :main-opts [&quot;-e&quot; &quot;(-&gt;&gt;(Thread/currentThread)(.getContextClassLoader)(clojure.lang.DynamicClassLoader.)(.setContextClassLoader,(Thread/currentThread)))&quot; &quot;-m&quot; &quot;cognitect.rebl&quot;]}, :fly {:main-opts [&quot;-e&quot; &quot;(load-file,(str,(System/getProperty,\&quot;user.home\&quot;),\&quot;/.clojure/dev.clj\&quot;))&quot;]}, :1.2 {:override-deps {org.clojure/clojure {:mvn/version &quot;1.2.1&quot;}}}, :nrepl {:extra-deps {nrepl/nrepl {:mvn/version &quot;RELEASE&quot;}}, :main-opts [&quot;-m&quot; &quot;nrepl.cmdline&quot;]}, :prepl {:jvm-opts [&quot;-Dclojure.server.repl={:port,40404,:accept,clojure.core.server/io-prepl}&quot;]}, :closh {:extra-deps {closh/closh {:git/url &quot;https://github.com/dundalek/closh.git&quot;, :tag &quot;v0.5.0&quot;, :sha &quot;dec68b43a66ff8547e4742fa433c4d486f550e60&quot;}}, :main-opts [&quot;-m&quot; &quot;closh.zero.frontend.rebel&quot;]}, :1.5 {:override-deps {org.clojure/clojure {:mvn/version &quot;1.5.1&quot;}}}, :1.6 {:override-deps {org.clojure/clojure {:mvn/version &quot;1.6.0&quot;}}}, :graph {:deps {org.clojure/tools.deps.graph {:mvn/version &quot;1.0.56&quot;}}, :main-opts [&quot;-m&quot; &quot;clojure.tools.deps.graph&quot;]}, :readme {:extra-deps {seancorfield/readme {:mvn/version &quot;RELEASE&quot;}}, :main-opts [&quot;-m&quot; &quot;seancorfield.readme&quot;]}, :1.10.2 {:override-deps {org.clojure/clojure {:mvn/version &quot;1.10.2-alpha2&quot;}}}, :runner {:extra-deps {com.cognitect/test-runner {:git/url &quot;https://github.com/cognitect-labs/test-runner&quot;, :sha &quot;b6b3193fcc42659d7e46ecd1884a228993441182&quot;}}, :main-opts [&quot;-m&quot; &quot;cognitect.test-runner&quot; &quot;-d&quot; &quot;test&quot; &quot;-d&quot; &quot;src/test/clojure&quot;]}, :send-mail {:exec-fn items2.core/send-mail}, :1.7 {:override-deps {org.clojure/clojure {:mvn/version &quot;1.7.0&quot;}}}, :master {:override-deps {org.clojure/clojure {:mvn/version &quot;1.10.2-master-SNAPSHOT&quot;}}}, :add-libs {:extra-deps {org.clojure/tools.deps.alpha {:git/url &quot;https://github.com/clojure/tools.deps.alpha&quot;, :sha &quot;ada6944e1bf949f9e2ed5291a6fd45e5c4628392&quot;}}, :main-opts [&quot;-e&quot; &quot;(-&gt;&gt;(Thread/currentThread)(.getContextClassLoader)(clojure.lang.DynamicClassLoader.)(.setContextClassLoader,(Thread/currentThread)))&quot;]}, :1.10.1 {:override-deps {org.clojure/clojure {:mvn/version &quot;1.10.1&quot;}}}, :1.9 {:override-deps {org.clojure/clojure {:mvn/version &quot;1.9.0&quot;}}}, :j14 {:jvm-opts [&quot;-XX:+ShowCodeDetailsInExceptionMessages&quot;]}, :socket-zero {:jvm-opts [&quot;-Dclojure.server.repl={:port,0,:accept,clojure.core.server/repl}&quot;], :main-opts [&quot;-e&quot; &quot;(.getLocalPort,(get-in,@#'clojure.core.server/servers,[\&quot;repl\&quot;,:socket]))&quot;]}, :deploy {:extra-deps {slipset/deps-deploy {:mvn/version &quot;RELEASE&quot;}}, :main-opts [&quot;-m&quot; &quot;deps-deploy.deps-deploy&quot; &quot;deploy&quot;]}, :test {:extra-paths [&quot;test&quot;], :extra-deps {fipp/fipp {:mvn/version &quot;0.6.23&quot;}, expound/expound {:mvn/version &quot;0.8.7&quot;}, orchestra/orchestra {:mvn/version &quot;2020.09.18-1&quot;}, com.gfredericks/test.chuck {:mvn/version &quot;0.2.10&quot;}, lambdaisland/kaocha {:mvn/version &quot;1.0.732&quot;}}}, :comp {:extra-deps {compliment/compliment {:mvn/version &quot;RELEASE&quot;}}}, :dev {:extra-paths [&quot;dev/src&quot; &quot;test&quot; &quot;dev/resources&quot;], :extra-deps {fipp/fipp {:mvn/version &quot;0.6.23&quot;}, expound/expound {:mvn/version &quot;0.8.7&quot;}, orchestra/orchestra {:mvn/version &quot;2020.09.18-1&quot;}, com.gfredericks/test.chuck {:mvn/version &quot;0.2.10&quot;}, org.clojure/tools.gitlibs {:mvn/version &quot;1.0.100&quot;}, tubular/tubular {:mvn/version &quot;1.4.0&quot;}, lambdaisland/kaocha {:mvn/version &quot;1.0.732&quot;}}}, :socket-rebl {:extra-deps {seancorfield/socket-rebl {:git/url &quot;https://github.com/seancorfield/socket-rebl&quot;, :sha &quot;60dd65cb8d03a9cf5eba21081cdfad5e27f72a8b&quot;}}, :jvm-opts [&quot;-Dclojure.server.repl={:port,50123,:accept,socket.rebl/repl}&quot;]}, :classes {:extra-paths [&quot;classes&quot;]}, :decompile {:extra-deps {com.clojure-goes-fast/clj-java-decompiler {:mvn/version &quot;RELEASE&quot;}}}, :reflect {:extra-deps {com.stuarthalloway/reflector {:git/url &quot;https://github.com/stuarthalloway/reflector&quot;, :sha &quot;93a0c19b4526c1180959e940202928d35e5c3cef&quot;}}}, :1.0 {:override-deps {org.clojure/clojure {:mvn/version &quot;1.0.0&quot;}}}, :deps {:replace-deps {org.clojure/tools.deps.alpha {:mvn/version &quot;0.9.857&quot;}, org.slf4j/slf4j-nop {:mvn/version &quot;1.7.25&quot;}}, :ns-default clojure.tools.cli.api}}, :mvn/repos {&quot;central&quot; {:url &quot;https://repo1.maven.org/maven2/&quot;}, &quot;clojars&quot; {:url &quot;https://repo.clojars.org/&quot;}, &quot;sonatype&quot; {:url &quot;https://oss.sonatype.org/content/repositories/snapshots/&quot;}}, :system-aliases #{:1.4 :install :spec2 :jar :outdated :portal :1.3 :eastwood :reveal :socket :check :expect :new :bench :liquid :jedi-time :pne :1.8 :1.10 :reveal-nrepl :1.1 :rebel :uberjar :measure :rebl :fly :1.2 :nrepl :prepl :closh :1.5 :1.6 :graph :readme :1.10.2 :runner :1.7 :master :add-libs :1.10.1 :1.9 :j14 :socket-zero :deploy :test :comp :socket-rebl :classes :decompile :reflect :1.0 :deps}, :deps-tree {org.clojure/clojure {:mvn/version &quot;1.10.1&quot;, :deps/manifest :mvn, :parents #{[]}, :paths [&quot;/home/shun/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar&quot;], :children (org.clojure/core.specs.alpha)}, joda-time/joda-time {:mvn/version &quot;2.7&quot;, :deps/manifest :mvn, :dependents [clj-time/clj-time], :parents #{[com.gfredericks/test.chuck clj-time/clj-time]}, :paths [&quot;/home/shun/.m2/repository/joda-time/joda-time/2.7/joda-time-2.7.jar&quot;], :children ()}, commons-codec/commons-codec {:mvn/version &quot;1.9&quot;, :deps/manifest :mvn, :dependents [com.draines/postal], :parents #{[com.draines/postal]}, :paths [&quot;/home/shun/.m2/repository/commons-codec/commons-codec/1.9/commons-codec-1.9.jar&quot;], :children ()}, com.zaxxer/HikariCP {:mvn/version &quot;3.4.5&quot;, :deps/manifest :mvn, :dependents [hikari-cp/hikari-cp], :parents #{[hikari-cp/hikari-cp]}, :paths [&quot;/home/shun/.m2/repository/com/zaxxer/HikariCP/3.4.5/HikariCP-3.4.5.jar&quot;], :children ()}, hodur/spec-schema {:mvn/version &quot;0.1.5&quot;, :deps/manifest :mvn, :dependents [caesarhu/hodur-translate], :parents #{[caesarhu/hodur-translate]}, :paths [&quot;/home/shun/.m2/repository/hodur/spec-schema/0.1.5/spec-schema-0.1.5.jar&quot;], :children (hodur/engine)}, com.draines/postal {:mvn/version &quot;2.0.4&quot;, :deps/manifest :mvn, :parents #{[]}, :paths [&quot;/home/shun/.m2/repository/com/draines/postal/2.0.4/postal-2.0.4.jar&quot;], :children (commons-codec/commons-codec com.sun.mail/jakarta.mail)}, org.clojure/tools.logging {:mvn/version &quot;1.1.0&quot;, :deps/manifest :mvn, :dependents [migratus/migratus org.clojure/java.data], :parents #{[migratus/migratus] [seancorfield/next.jdbc org.clojure/java.data]}, :paths [&quot;/home/shun/.m2/repository/org/clojure/tools.logging/1.1.0/tools.logging-1.1.0.jar&quot;], :children ()}, org.clojure/core.specs.alpha {:mvn/version &quot;0.2.44&quot;, :deps/manifest :mvn, :dependents [org.clojure/clojure], :parents #{[org.clojure/clojure]}, :paths [&quot;/home/shun/.m2/repository/org/clojure/core.specs.alpha/0.2.44/core.specs.alpha-0.2.44.jar&quot;], :children ()}, com.github.vertical-blank/sql-formatter {:mvn/version &quot;1.0.3&quot;, :deps/manifest :mvn, :dependents [caesarhu/sql-formatter], :parents #{[caesarhu/hodur-translate caesarhu/sql-formatter]}, :paths [&quot;/home/shun/.m2/repository/com/github/vertical-blank/sql-formatter/1.0.3/sql-formatter-1.0.3.jar&quot;], :children ()}, lambdaisland/kaocha {:mvn/version &quot;1.0.732&quot;, :deps/manifest :mvn, :parents #{[]}, :paths [&quot;/home/shun/.m2/repository/lambdaisland/kaocha/1.0.732/kaocha-1.0.732.jar&quot;], :children (org.clojure/spec.alpha org.clojure/tools.cli lambdaisland/deep-diff slingshot/slingshot lambdaisland/tools.namespace progrock/progrock org.tcrawley/dynapath hawk/hawk meta-merge/meta-merge)}, com.fasterxml.jackson.core/jackson-databind {:mvn/version &quot;2.12.0&quot;, :deps/manifest :mvn, :dependents [metosin/jsonista com.fasterxml.jackson.datatype/jackson-datatype-jsr310], :parents #{[metosin/jsonista] [metosin/jsonista com.fasterxml.jackson.datatype/jackson-datatype-jsr310]}, :paths [&quot;/home/shun/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.12.0/jackson-databind-2.12.0.jar&quot;], :children (com.fasterxml.jackson.core/jackson-annotations)}, expound/expound {:mvn/version &quot;0.8.7&quot;, :deps/manifest :mvn, :parents #{[]}, :paths [&quot;/home/shun/.m2/repository/expound/expound/0.8.7/expound-0.8.7.jar&quot;], :children ()}, org.clojure/spec.alpha {:mvn/version &quot;0.2.187&quot;, :deps/manifest :mvn, :dependents [metosin/spec-tools lambdaisland/kaocha], :parents #{[caesarhu/hodur-translate metosin/spec-tools] [lambdaisland/kaocha]}, :paths [&quot;/home/shun/.m2/repository/org/clojure/spec.alpha/0.2.187/spec.alpha-0.2.187.jar&quot;], :children ()}, org.clojure/tools.cli {:mvn/version &quot;1.0.194&quot;, :deps/manifest :mvn, :dependents [lambdaisland/kaocha mvxcvi/cljstyle], :parents #{[lambdaisland/kaocha] [caesarhu/hodur-translate mvxcvi/cljstyle]}, :paths [&quot;/home/shun/.m2/repository/org/clojure/tools.cli/1.0.194/tools.cli-1.0.194.jar&quot;], :children ()}, mvxcvi/puget {:mvn/version &quot;1.1.2&quot;, :deps/manifest :mvn, :dependents [lambdaisland/deep-diff], :parents #{[lambdaisland/kaocha lambdaisland/deep-diff]}, :paths [&quot;/home/shun/.m2/repository/mvxcvi/puget/1.1.2/puget-1.1.2.jar&quot;], :children ()}, com.taoensso/encore {:mvn/version &quot;3.4.0&quot;, :deps/manifest :mvn, :dependents [com.taoensso/timbre], :parents #{[com.taoensso/timbre]}, :paths [&quot;/home/shun/.m2/repository/com/taoensso/encore/3.4.0/encore-3.4.0.jar&quot;], :children (com.taoensso/truss)}, juxt/clip {:mvn/version &quot;0.21.0&quot;, :deps/manifest :mvn, :parents #{[]}, :paths [&quot;/home/shun/.m2/repository/juxt/clip/0.21.0/clip-0.21.0.jar&quot;], :children ()}, caesarhu/aave {:git/url &quot;https://github.com/caesarhu/aave.git&quot;, :sha &quot;7c594ea03bcbd3b9653f5b8c382990ed062c1338&quot;, :deps/manifest :deps, :deps/root &quot;/home/shun/.gitlibs/libs/caesarhu/aave/7c594ea03bcbd3b9653f5b8c382990ed062c1338&quot;, :parents #{[]}, :paths [&quot;/home/shun/.gitlibs/libs/caesarhu/aave/7c594ea03bcbd3b9653f5b8c382990ed062c1338/src&quot;], :children ()}, metosin/spec-tools {:mvn/version &quot;0.10.4&quot;, :deps/manifest :mvn, :dependents [caesarhu/hodur-translate], :parents #{[caesarhu/hodur-translate]}, :paths [&quot;/home/shun/.m2/repository/metosin/spec-tools/0.10.4/spec-tools-0.10.4.jar&quot;], :children ()}, net.incongru.watchservice/barbary-watchservice {:mvn/version &quot;1.0&quot;, :deps/manifest :mvn, :dependents [hawk/hawk], :parents #{[lambdaisland/kaocha hawk/hawk]}, :paths [&quot;/home/shun/.m2/repository/net/incongru/watchservice/barbary-watchservice/1.0/barbary-watchservice-1.0.jar&quot;], :children (net.java.dev.jna/jna)}, lambdaisland/deep-diff {:mvn/version &quot;0.0-47&quot;, :deps/manifest :mvn, :dependents [lambdaisland/kaocha], :parents #{[lambdaisland/kaocha]}, :paths [&quot;/home/shun/.m2/repository/lambdaisland/deep-diff/0.0-47/deep-diff-0.0-47.jar&quot;], :children (mvxcvi/puget mvxcvi/arrangement tech.droit/clj-diff)}, exoscale/ex {:mvn/version &quot;0.3.16&quot;, :deps/manifest :mvn, :parents #{[]}, :paths [&quot;/home/shun/.m2/repository/exoscale/ex/0.3.16/ex-0.3.16.jar&quot;], :children ()}, com.gfredericks/test.chuck {:mvn/version &quot;0.2.10&quot;, :deps/manifest :mvn, :parents #{[]}, :paths [&quot;/home/shun/.m2/repository/com/gfredericks/test.chuck/0.2.10/test.chuck-0.2.10.jar&quot;], :children (clj-time/clj-time instaparse/instaparse com.andrewmcveigh/cljs-time)}, io.aviso/pretty {:mvn/version &quot;0.1.37&quot;, :deps/manifest :mvn, :dependents [com.taoensso/timbre], :parents #{[com.taoensso/timbre]}, :paths [&quot;/home/shun/.m2/repository/io/aviso/pretty/0.1.37/pretty-0.1.37.jar&quot;], :children ()}, hodur/engine {:mvn/version &quot;0.1.5&quot;, :deps/manifest :mvn, :dependents [hodur/spec-schema], :parents #{[caesarhu/hodur-translate hodur/spec-schema]}, :paths [&quot;/home/shun/.m2/repository/hodur/engine/0.1.5/engine-0.1.5.jar&quot;], :children ()}, rewrite-clj/rewrite-clj {:mvn/version &quot;0.6.1&quot;, :deps/manifest :mvn, :dependents [mvxcvi/cljstyle], :parents #{[caesarhu/hodur-translate mvxcvi/cljstyle]}, :paths [&quot;/home/shun/.m2/repository/rewrite-clj/rewrite-clj/0.6.1/rewrite-clj-0.6.1.jar&quot;], :children ()}, honeysql/honeysql {:mvn/version &quot;1.0.444&quot;, :deps/manifest :mvn, :dependents [caesarhu/hodur-translate], :parents #{[caesarhu/hodur-translate]}, :paths [&quot;/home/shun/.m2/repository/honeysql/honeysql/1.0.444/honeysql-1.0.444.jar&quot;], :children ()}, slingshot/slingshot {:mvn/version &quot;0.12.2&quot;, :deps/manifest :mvn, :dependents [lambdaisland/kaocha], :parents #{[lambdaisland/kaocha]}, :paths [&quot;/home/shun/.m2/repository/slingshot/slingshot/0.12.2/slingshot-0.12.2.jar&quot;], :children ()}, functionalbytes/redelay {:mvn/version &quot;1.1.0&quot;, :deps/manifest :mvn, :parents #{[]}, :paths [&quot;/home/shun/.m2/repository/functionalbytes/redelay/1.1.0/redelay-1.1.0.jar&quot;], :children ()}, org.postgresql/postgresql {:mvn/version &quot;42.2.18&quot;, :deps/manifest :mvn, :parents #{[]}, :paths [&quot;/home/shun/.m2/repository/org/postgresql/postgresql/42.2.18/postgresql-42.2.18.jar&quot;], :children (org.checkerframework/checker-qual)}, org.clojure/tools.namespace {:mvn/version &quot;1.1.0&quot;, :deps/manifest :mvn, :parents #{[]}, :paths [&quot;/home/shun/.m2/repository/org/clojure/tools.namespace/1.1.0/tools.namespace-1.1.0.jar&quot;], :children (org.clojure/java.classpath org.clojure/tools.reader)}, fipp/fipp {:mvn/version &quot;0.6.23&quot;, :deps/manifest :mvn, :parents #{[]}, :paths [&quot;/home/shun/.m2/repository/fipp/fipp/0.6.23/fipp-0.6.23.jar&quot;], :children (org.clojure/core.rrb-vector)}, com.fasterxml.jackson.core/jackson-core {:mvn/version &quot;2.12.0&quot;, :deps/manifest :mvn, :dependents [metosin/jsonista com.fasterxml.jackson.datatype/jackson-datatype-jsr310 com.fasterxml.jackson.core/jackson-databind], :parents #{[metosin/jsonista] [metosin/jsonista com.fasterxml.jackson.datatype/jackson-datatype-jsr310] [metosin/jsonista com.fasterxml.jackson.core/jackson-databind]}, :paths [&quot;/home/shun/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.12.0/jackson-core-2.12.0.jar&quot;], :children ()}, clj-time/clj-time {:mvn/version &quot;0.10.0&quot;, :deps/manifest :mvn, :dependents [com.gfredericks/test.chuck], :parents #{[com.gfredericks/test.chuck]}, :paths [&quot;/home/shun/.m2/repository/clj-time/clj-time/0.10.0/clj-time-0.10.0.jar&quot;], :children (joda-time/joda-time)}, aero/aero {:mvn/version &quot;1.1.6&quot;, :deps/manifest :mvn, :parents #{[]}, :paths [&quot;/home/shun/.m2/repository/aero/aero/1.1.6/aero-1.1.6.jar&quot;], :children ()}, org.tobereplaced/lettercase {:mvn/version &quot;1.0.0&quot;, :deps/manifest :mvn, :dependents [hikari-cp/hikari-cp], :parents #{[hikari-cp/hikari-cp]}, :paths [&quot;/home/shun/.m2/repository/org/tobereplaced/lettercase/1.0.0/lettercase-1.0.0.jar&quot;], :children ()}, lambdaisland/tools.namespace {:mvn/version &quot;0.0-237&quot;, :deps/manifest :mvn, :dependents [lambdaisland/kaocha], :parents #{[lambdaisland/kaocha]}, :paths [&quot;/home/shun/.m2/repository/lambdaisland/tools.namespace/0.0-237/tools.namespace-0.0-237.jar&quot;], :children ()}, migratus/migratus {:mvn/version &quot;1.3.3&quot;, :deps/manifest :mvn, :parents #{[]}, :paths [&quot;/home/shun/.m2/repository/migratus/migratus/1.3.3/migratus-1.3.3.jar&quot;], :children (org.clojure/tools.logging org.clojure/java.jdbc)}, mvxcvi/arrangement {:mvn/version &quot;1.2.0&quot;, :deps/manifest :mvn, :dependents [lambdaisland/deep-diff mvxcvi/puget], :parents #{[lambdaisland/kaocha lambdaisland/deep-diff] [lambdaisland/kaocha lambdaisland/deep-diff mvxcvi/puget]}, :paths [&quot;/home/shun/.m2/repository/mvxcvi/arrangement/1.2.0/arrangement-1.2.0.jar&quot;], :children ()}, instaparse/instaparse {:mvn/version &quot;1.3.6&quot;, :deps/manifest :mvn, :dependents [com.gfredericks/test.chuck], :parents #{[com.gfredericks/test.chuck]}, :paths [&quot;/home/shun/.m2/repository/instaparse/instaparse/1.3.6/instaparse-1.3.6.jar&quot;], :children ()}, nilenso/honeysql-postgres {:mvn/version &quot;0.2.6&quot;, :deps/manifest :mvn, :dependents [caesarhu/hodur-translate], :parents #{[caesarhu/hodur-translate]}, :paths [&quot;/home/shun/.m2/repository/nilenso/honeysql-postgres/0.2.6/honeysql-postgres-0.2.6.jar&quot;], :children (net.cgrand/macrovich)}, mvxcvi/cljstyle {:mvn/version &quot;0.14.0&quot;, :deps/manifest :mvn, :dependents [caesarhu/hodur-translate], :parents #{[caesarhu/hodur-translate]}, :paths [&quot;/home/shun/.m2/repository/mvxcvi/cljstyle/0.14.0/cljstyle-0.14.0.jar&quot;], :children (rewrite-clj/rewrite-clj com.googlecode.java-diff-utils/diffutils)}, clj-tuple/clj-tuple {:mvn/version &quot;0.2.2&quot;, :deps/manifest :mvn, :dependents [clojure.java-time/clojure.java-time], :parents #{[clojure.java-time/clojure.java-time]}, :paths [&quot;/home/shun/.m2/repository/clj-tuple/clj-tuple/0.2.2/clj-tuple-0.2.2.jar&quot;], :children ()}, com.taoensso/truss {:mvn/version &quot;1.6.0&quot;, :deps/manifest :mvn, :dependents [com.taoensso/encore], :parents #{[com.taoensso/timbre com.taoensso/encore]}, :paths [&quot;/home/shun/.m2/repository/com/taoensso/truss/1.6.0/truss-1.6.0.jar&quot;], :children ()}, com.fasterxml.jackson.core/jackson-annotations {:mvn/version &quot;2.12.0&quot;, :deps/manifest :mvn, :dependents [com.fasterxml.jackson.datatype/jackson-datatype-jsr310 com.fasterxml.jackson.core/jackson-databind], :parents #{[metosin/jsonista com.fasterxml.jackson.datatype/jackson-datatype-jsr310] [metosin/jsonista com.fasterxml.jackson.core/jackson-databind]}, :paths [&quot;/home/shun/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.12.0/jackson-annotations-2.12.0.jar&quot;], :children ()}, caesarhu/sql-formatter {:mvn/version &quot;0.1.0&quot;, :deps/manifest :mvn, :dependents [caesarhu/hodur-translate], :parents #{[caesarhu/hodur-translate]}, :paths [&quot;/home/shun/.m2/repository/caesarhu/sql-formatter/0.1.0/sql-formatter-0.1.0.jar&quot;], :children (com.github.vertical-blank/sql-formatter)}, riddley/riddley {:mvn/version &quot;0.1.12&quot;, :deps/manifest :mvn, :dependents [com.rpl/specter], :parents #{[com.rpl/specter]}, :paths [&quot;/home/shun/.m2/repository/riddley/riddley/0.1.12/riddley-0.1.12.jar&quot;], :children ()}, progrock/progrock {:mvn/version &quot;0.1.2&quot;, :deps/manifest :mvn, :dependents [lambdaisland/kaocha], :parents #{[lambdaisland/kaocha]}, :paths [&quot;/home/shun/.m2/repository/progrock/progrock/0.1.2/progrock-0.1.2.jar&quot;], :children ()}, com.googlecode.java-diff-utils/diffutils {:mvn/version &quot;1.3.0&quot;, :deps/manifest :mvn, :dependents [mvxcvi/cljstyle], :parents #{[caesarhu/hodur-translate mvxcvi/cljstyle]}, :paths [&quot;/home/shun/.m2/repository/com/googlecode/java-diff-utils/diffutils/1.3.0/diffutils-1.3.0.jar&quot;], :children ()}, seancorfield/next.jdbc {:mvn/version &quot;1.1.613&quot;, :deps/manifest :mvn, :parents #{[]}, :paths [&quot;/home/shun/.m2/repository/seancorfield/next.jdbc/1.1.613/next.jdbc-1.1.613.jar&quot;], :children (org.clojure/java.data)}, org.clojure/java.classpath {:mvn/version &quot;1.0.0&quot;, :deps/manifest :mvn, :dependents [org.clojure/tools.namespace], :parents #{[org.clojure/tools.namespace]}, :paths [&quot;/home/shun/.m2/repository/org/clojure/java.classpath/1.0.0/java.classpath-1.0.0.jar&quot;], :children ()}, funcool/datoteka {:mvn/version &quot;1.2.0&quot;, :deps/manifest :mvn, :parents #{[]}, :paths [&quot;/home/shun/.m2/repository/funcool/datoteka/1.2.0/datoteka-1.2.0.jar&quot;], :children (funcool/promesa)}, com.fzakaria/slf4j-timbre {:mvn/version &quot;0.3.20&quot;, :deps/manifest :mvn, :parents #{[]}, :paths [&quot;/home/shun/.m2/repository/com/fzakaria/slf4j-timbre/0.3.20/slf4j-timbre-0.3.20.jar&quot;], :children (org.slf4j/slf4j-api)}, clojure.java-time/clojure.java-time {:mvn/version &quot;0.3.2&quot;, :deps/manifest :mvn, :parents #{[]}, :paths [&quot;/home/shun/.m2/repository/clojure/java-time/clojure.java-time/0.3.2/clojure.java-time-0.3.2.jar&quot;], :children (clj-tuple/clj-tuple)}, borkdude/dynaload {:mvn/version &quot;0.2.2&quot;, :deps/manifest :mvn, :dependents [metosin/malli], :parents #{[metosin/malli]}, :paths [&quot;/home/shun/.m2/repository/borkdude/dynaload/0.2.2/dynaload-0.2.2.jar&quot;], :children ()}, net.cgrand/macrovich {:mvn/version &quot;0.2.1&quot;, :deps/manifest :mvn, :dependents [nilenso/honeysql-postgres], :parents #{[caesarhu/hodur-translate nilenso/honeysql-postgres]}, :paths [&quot;/home/shun/.m2/repository/net/cgrand/macrovich/0.2.1/macrovich-0.2.1.jar&quot;], :children ()}, orchestra/orchestra {:mvn/version &quot;2020.09.18-1&quot;, :deps/manifest :mvn, :parents #{[]}, :paths [&quot;/home/shun/.m2/repository/orchestra/orchestra/2020.09.18-1/orchestra-2020.09.18-1.jar&quot;], :children ()}, borkdude/edamame {:mvn/version &quot;0.0.11-alpha.21&quot;, :deps/manifest :mvn, :dependents [borkdude/sci], :parents #{[borkdude/sci]}, :paths [&quot;/home/shun/.m2/repository/borkdude/edamame/0.0.11-alpha.21/edamame-0.0.11-alpha.21.jar&quot;], :children ()}, org.clojure/data.csv {:mvn/version &quot;1.0.0&quot;, :deps/manifest :mvn, :parents #{[]}, :paths [&quot;/home/shun/.m2/repository/org/clojure/data.csv/1.0.0/data.csv-1.0.0.jar&quot;], :children ()}, com.taoensso/timbre {:mvn/version &quot;5.1.0&quot;, :deps/manifest :mvn, :parents #{[]}, :paths [&quot;/home/shun/.m2/repository/com/taoensso/timbre/5.1.0/timbre-5.1.0.jar&quot;], :children (com.taoensso/encore io.aviso/pretty)}, metosin/malli {:mvn/version &quot;0.2.1&quot;, :deps/manifest :mvn, :parents #{[]}, :paths [&quot;/home/shun/.m2/repository/metosin/malli/0.2.1/malli-0.2.1.jar&quot;], :children (borkdude/dynaload)}, org.clojure/java.jdbc {:mvn/version &quot;0.7.11&quot;, :deps/manifest :mvn, :dependents [migratus/migratus], :parents #{[migratus/migratus]}, :paths [&quot;/home/shun/.m2/repository/org/clojure/java.jdbc/0.7.11/java.jdbc-0.7.11.jar&quot;], :children ()}, org.clojure/core.rrb-vector {:mvn/version &quot;0.1.1&quot;, :deps/manifest :mvn, :dependents [fipp/fipp], :parents #{[fipp/fipp]}, :paths [&quot;/home/shun/.m2/repository/org/clojure/core.rrb-vector/0.1.1/core.rrb-vector-0.1.1.jar&quot;], :children ()}, hikari-cp/hikari-cp {:mvn/version &quot;2.13.0&quot;, :deps/manifest :mvn, :parents #{[]}, :paths [&quot;/home/shun/.m2/repository/hikari-cp/hikari-cp/2.13.0/hikari-cp-2.13.0.jar&quot;], :children (com.zaxxer/HikariCP org.tobereplaced/lettercase)}, funcool/promesa {:mvn/version &quot;5.0.0&quot;, :deps/manifest :mvn, :dependents [funcool/datoteka], :parents #{[funcool/datoteka]}, :paths [&quot;/home/shun/.m2/repository/funcool/promesa/5.0.0/promesa-5.0.0.jar&quot;], :children ()}, org.checkerframework/checker-qual {:mvn/version &quot;3.5.0&quot;, :deps/manifest :mvn, :dependents [org.postgresql/postgresql], :parents #{[org.postgresql/postgresql]}, :paths [&quot;/home/shun/.m2/repository/org/checkerframework/checker-qual/3.5.0/checker-qual-3.5.0.jar&quot;], :children ()}, persistent-sorted-set/persistent-sorted-set {:mvn/version &quot;0.1.2&quot;, :deps/manifest :mvn, :dependents [datascript/datascript], :parents #{[caesarhu/hodur-translate datascript/datascript]}, :paths [&quot;/home/shun/.m2/repository/persistent-sorted-set/persistent-sorted-set/0.1.2/persistent-sorted-set-0.1.2.jar&quot;], :children ()}, net.java.dev.jna/jna {:mvn/version &quot;3.2.2&quot;, :deps/manifest :mvn, :dependents [net.incongru.watchservice/barbary-watchservice], :parents #{[lambdaisland/kaocha hawk/hawk net.incongru.watchservice/barbary-watchservice]}, :paths [&quot;/home/shun/.m2/repository/net/java/dev/jna/jna/3.2.2/jna-3.2.2.jar&quot;], :children ()}, com.andrewmcveigh/cljs-time {:mvn/version &quot;0.5.1&quot;, :deps/manifest :mvn, :dependents [com.gfredericks/test.chuck], :parents #{[com.gfredericks/test.chuck]}, :paths [&quot;/home/shun/.m2/repository/com/andrewmcveigh/cljs-time/0.5.1/cljs-time-0.5.1.jar&quot;], :children ()}, org.clojure/tools.reader {:mvn/version &quot;1.3.4&quot;, :deps/manifest :mvn, :dependents [org.clojure/tools.namespace borkdude/edamame], :parents #{[org.clojure/tools.namespace] [borkdude/sci borkdude/edamame]}, :paths [&quot;/home/shun/.m2/repository/org/clojure/tools.reader/1.3.4/tools.reader-1.3.4.jar&quot;], :children ()}, org.tcrawley/dynapath {:mvn/version &quot;1.1.0&quot;, :deps/manifest :mvn, :dependents [lambdaisland/kaocha], :parents #{[lambdaisland/kaocha]}, :paths [&quot;/home/shun/.m2/repository/org/tcrawley/dynapath/1.1.0/dynapath-1.1.0.jar&quot;], :children ()}, clj-bom/clj-bom {:mvn/version &quot;0.1.2&quot;, :deps/manifest :mvn, :parents #{[]}, :paths [&quot;/home/shun/.m2/repository/clj-bom/clj-bom/0.1.2/clj-bom-0.1.2.jar&quot;], :children ()}, datascript/datascript {:mvn/version &quot;1.0.1&quot;, :deps/manifest :mvn, :dependents [caesarhu/hodur-translate], :parents #{[caesarhu/hodur-translate]}, :paths [&quot;/home/shun/.m2/repository/datascript/datascript/1.0.1/datascript-1.0.1.jar&quot;], :children (persistent-sorted-set/persistent-sorted-set)}, cjsauer/disqualified {:mvn/version &quot;0.1.0&quot;, :deps/manifest :mvn, :parents #{[]}, :paths [&quot;/home/shun/.m2/repository/cjsauer/disqualified/0.1.0/disqualified-0.1.0.jar&quot;], :children ()}, nrepl/nrepl {:mvn/version &quot;0.8.3&quot;, :deps/manifest :mvn, :parents #{[]}, :paths [&quot;/home/shun/.m2/repository/nrepl/nrepl/0.8.3/nrepl-0.8.3.jar&quot;], :children ()}, com.rpl/specter {:mvn/version &quot;1.1.3&quot;, :deps/manifest :mvn, :parents #{[]}, :paths [&quot;/home/shun/.m2/repository/com/rpl/specter/1.1.3/specter-1.1.3.jar&quot;], :children (riddley/riddley)}, org.slf4j/slf4j-api {:mvn/version &quot;1.7.30&quot;, :deps/manifest :mvn, :dependents [com.fzakaria/slf4j-timbre], :parents #{[com.fzakaria/slf4j-timbre]}, :paths [&quot;/home/shun/.m2/repository/org/slf4j/slf4j-api/1.7.30/slf4j-api-1.7.30.jar&quot;], :children ()}, org.clojure/test.check {:mvn/version &quot;1.1.0&quot;, :deps/manifest :mvn, :parents #{[]}, :paths [&quot;/home/shun/.m2/repository/org/clojure/test.check/1.1.0/test.check-1.1.0.jar&quot;], :children ()}, com.sun.activation/jakarta.activation {:mvn/version &quot;1.2.1&quot;, :deps/manifest :mvn, :dependents [com.sun.mail/jakarta.mail], :parents #{[com.draines/postal com.sun.mail/jakarta.mail]}, :paths [&quot;/home/shun/.m2/repository/com/sun/activation/jakarta.activation/1.2.1/jakarta.activation-1.2.1.jar&quot;], :children ()}, metosin/jsonista {:mvn/version &quot;0.3.0&quot;, :deps/manifest :mvn, :parents #{[]}, :paths [&quot;/home/shun/.m2/repository/metosin/jsonista/0.3.0/jsonista-0.3.0.jar&quot;], :children (com.fasterxml.jackson.core/jackson-databind com.fasterxml.jackson.core/jackson-core com.fasterxml.jackson.datatype/jackson-datatype-jsr310)}, hawk/hawk {:mvn/version &quot;0.2.11&quot;, :deps/manifest :mvn, :dependents [lambdaisland/kaocha], :parents #{[lambdaisland/kaocha]}, :paths [&quot;/home/shun/.m2/repository/hawk/hawk/0.2.11/hawk-0.2.11.jar&quot;], :children (net.incongru.watchservice/barbary-watchservice)}, tech.droit/clj-diff {:mvn/version &quot;1.0.1&quot;, :deps/manifest :mvn, :dependents [lambdaisland/deep-diff], :parents #{[lambdaisland/kaocha lambdaisland/deep-diff]}, :paths [&quot;/home/shun/.m2/repository/tech/droit/clj-diff/1.0.1/clj-diff-1.0.1.jar&quot;], :children ()}, camel-snake-kebab/camel-snake-kebab {:mvn/version &quot;0.4.2&quot;, :deps/manifest :mvn, :dependents [caesarhu/hodur-translate], :parents #{[caesarhu/hodur-translate]}, :paths [&quot;/home/shun/.m2/repository/camel-snake-kebab/camel-snake-kebab/0.4.2/camel-snake-kebab-0.4.2.jar&quot;], :children ()}, org.clojure/java.data {:mvn/version &quot;1.0.78&quot;, :deps/manifest :mvn, :dependents [seancorfield/next.jdbc], :parents #{[seancorfield/next.jdbc]}, :paths [&quot;/home/shun/.m2/repository/org/clojure/java.data/1.0.78/java.data-1.0.78.jar&quot;], :children ()}, borkdude/sci.impl.reflector {:mvn/version &quot;0.0.1&quot;, :deps/manifest :mvn, :dependents [borkdude/sci], :parents #{[borkdude/sci]}, :paths [&quot;/home/shun/.m2/repository/borkdude/sci.impl.reflector/0.0.1/sci.impl.reflector-0.0.1.jar&quot;], :children ()}, com.sun.mail/jakarta.mail {:mvn/version &quot;1.6.5&quot;, :deps/manifest :mvn, :dependents [com.draines/postal], :parents #{[com.draines/postal]}, :paths [&quot;/home/shun/.m2/repository/com/sun/mail/jakarta.mail/1.6.5/jakarta.mail-1.6.5.jar&quot;], :children (com.sun.activation/jakarta.activation)}, borkdude/sci {:mvn/version &quot;0.2.0&quot;, :deps/manifest :mvn, :parents #{[]}, :paths [&quot;/home/shun/.m2/repository/borkdude/sci/0.2.0/sci-0.2.0.jar&quot;], :children (borkdude/edamame borkdude/sci.impl.reflector)}, caesarhu/hodur-translate {:git/url &quot;https://github.com/caesarhu/hodur-translate&quot;, :sha &quot;1c60441555c40969d97648f7e9dbeff7604c0eee&quot;, :deps/manifest :deps, :deps/root &quot;/home/shun/.gitlibs/libs/caesarhu/hodur-translate/1c60441555c40969d97648f7e9dbeff7604c0eee&quot;, :parents #{[]}, :paths [&quot;/home/shun/.gitlibs/libs/caesarhu/hodur-translate/1c60441555c40969d97648f7e9dbeff7604c0eee/src&quot; &quot;/home/shun/.gitlibs/libs/caesarhu/hodur-translate/1c60441555c40969d97648f7e9dbeff7604c0eee/resources&quot;], :children (hodur/spec-schema metosin/spec-tools honeysql/honeysql nilenso/honeysql-postgres mvxcvi/cljstyle caesarhu/sql-formatter datascript/datascript camel-snake-kebab/camel-snake-kebab)}, meta-merge/meta-merge {:mvn/version &quot;1.0.0&quot;, :deps/manifest :mvn, :dependents [lambdaisland/kaocha], :parents #{[lambdaisland/kaocha]}, :paths [&quot;/home/shun/.m2/repository/meta-merge/meta-merge/1.0.0/meta-merge-1.0.0.jar&quot;], :children ()}, medley/medley {:mvn/version &quot;1.3.0&quot;, :deps/manifest :mvn, :parents #{[]}, :paths [&quot;/home/shun/.m2/repository/medley/medley/1.3.0/medley-1.3.0.jar&quot;], :children ()}, com.fasterxml.jackson.datatype/jackson-datatype-jsr310 {:mvn/version &quot;2.12.0&quot;, :deps/manifest :mvn, :dependents [metosin/jsonista], :parents #{[metosin/jsonista]}, :paths [&quot;/home/shun/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.12.0/jackson-datatype-jsr310-2.12.0.jar&quot;], :children ()}}, :test-paths [&quot;test&quot;]}" />
              <option name="hash" value="5b3fb4f587963cef96232fa7c38e124f" />
            </ModuleDetails>
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MavenImportPreferences">
    <option name="generalSettings">
      <MavenGeneralSettings>
        <option name="mavenHome" value="$APPLICATION_HOME_DIR$/plugins/maven/lib/maven3" />
      </MavenGeneralSettings>
    </option>
  </component>
  <component name="ProjectId" id="1mJLDpG8BEKA0hO8ACLCqzXmYO7" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">
    <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
  </component>
  <component name="ReplState" timestamp="1609210955547">{:repl-history {:ide [], :local [{:command &quot;(dev)&quot;, :offset 4, :ns &quot;user&quot;} {:command &quot;(start)&quot;, :offset 6, :ns &quot;dev&quot;} {:command &quot;(do-test)&quot;, :offset 8, :ns &quot;dev&quot;} {:command &quot;(:system-profile @config/config)&quot;, :offset 31, :ns &quot;dev&quot;} {:command &quot;(reset)&quot;, :offset 6, :ns &quot;dev&quot;} {:command &quot;(migratus/reset-db)&quot;, :offset 18, :ns &quot;dev&quot;}], :remote []}}</component>
  <component name="RunManager" selected="Clojure REPL.reveal">
    <configuration default="true" type="ClojureREPL" factoryName="Local" activateToolWindowBeforeRun="false">
      <setting name="replType" value="NREPL" />
      <setting name="execution" value="LEININGEN" />
      <setting name="jvmArgs" value="" />
      <setting name="parameters" value="" />
      <setting name="workingDir" value="" />
      <setting name="profiles" value="" />
      <setting name="aliases" value="" />
      <setting name="fixLineNumbers" value="false" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="ClojureREPL" factoryName="Remote" activateToolWindowBeforeRun="false">
      <setting name="host" value="" />
      <setting name="port" value="0" />
      <setting name="replType" value="SOCKET" />
      <setting name="configType" value="SPECIFY" />
      <setting name="replPortFileType" value="STANDARD" />
      <setting name="customPortFile" value="" />
      <setting name="fixLineNumbers" value="false" />
      <method v="2" />
    </configuration>
    <configuration name="rebl" type="ClojureREPL" factoryName="Local" activateToolWindowBeforeRun="false">
      <module name="items2" />
      <setting name="replType" value="CLOJURE_MAIN" />
      <setting name="execution" value="DEPS" />
      <setting name="jvmArgs" value="" />
      <setting name="parameters" value="" />
      <setting name="workingDir" value="$PROJECT_DIR$" />
      <setting name="profiles" value="" />
      <setting name="aliases" value=":dev,:rebl" />
      <setting name="fixLineNumbers" value="false" />
      <method v="2" />
    </configuration>
    <configuration name="reveal" type="ClojureREPL" factoryName="Local" activateToolWindowBeforeRun="false">
      <module name="items2" />
      <setting name="replType" value="CLOJURE_MAIN" />
      <setting name="execution" value="DEPS" />
      <setting name="jvmArgs" value="" />
      <setting name="parameters" value="" />
      <setting name="workingDir" value="$PROJECT_DIR$" />
      <setting name="profiles" value="" />
      <setting name="aliases" value=":dev,:reveal" />
      <setting name="fixLineNumbers" value="false" />
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Clojure REPL.rebl" />
      <item itemvalue="Clojure REPL.reveal" />
    </list>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="d9cab758-e69a-4c31-94ca-b9ee00df7d84" name="Default Changelist" comment="" />
      <created>1609206632515</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1609206632515</updated>
    </task>
    <servers />
  </component>
  <component name="WindowStateProjectService">
    <state x="298" y="119" width="1157" height="756" key="#com.intellij.execution.impl.EditConfigurationsDialog" timestamp="1609207406194">
      <screen x="0" y="0" width="1920" height="922" />
    </state>
    <state x="298" y="119" width="1157" height="756" key="#com.intellij.execution.impl.EditConfigurationsDialog/0.0.1920.922@0.0.1920.922" timestamp="1609207406194" />
  </component>
</project>